1 什么是分布式锁? 锁 & 分布式
2 锁是什么?
    锁是一种同步机制,用于控制多个线程对共享资源的访问,以确保数据的一致性和安全.当啊多个线程尝试同时
    修改同一个资源(例如,共享变量、数据结构或文件)时，就需要使用锁来保证同一时刻只有一个线程在操作这个资源。
    锁的钥匙只有一把，只有一个人能拿到钥匙。
3 分布式锁？
    分布式锁是分布式系统中一种同步机制，用于控制不同机器中线程对共享资源的访问。
4 分布式锁条件？
    互斥性：分布式锁最基本要求，保证同一个时刻只有一个线程在操作共享资源
        互斥性-> 检查锁状态 + 加锁 是原子操作
    可重入：同一个节点上的同一个线程，如果在获取了锁之后释放锁之前，再次尝试获取锁，那么也可以再次获取这个锁
    锁超时：支持锁超时自动释放，防止因为机器宕机等原因导致锁释放操作未能执行，造成共享资源一直被锁。
    （宕机：电脑死机）
    支持阻塞和非阻塞：支持获取不到锁直接返回，支持获取不到锁阻塞等待（一直等待或等待一段时间后返回），
        类似于tryLock(),lock(),tryLock(Long time)方法
    支持公平锁和非公平锁（可选）：公平锁是按请求枷锁的顺序获得锁（类似排队）
                            非公平锁是当锁被释放掉时所有线程去尝试抢占（都有机会获取该锁）
    高性能：加锁都是高性能的，避免业务操作因为使用分布式锁耗时急剧变长
    高可靠：保证高可用防止分布式锁失效（尽可能降低分布式锁失效的概率）
5 分布式锁基本原理
    全局存储空间：锁的实现需要依托一个所有服务器都能访问到的全局存储空间，任何数据变更对所有服务器可见
    唯一标识：不同的共享资源，需要用不同的锁进行保护，因此相应的锁必须有唯一标识
    锁至少两种状态：锁定、非锁定（这两种是最基本的状态），重入计数（可重入锁使用）
    加锁：检查锁状态 + 加锁是原子操作，保证互斥
    解锁：确保解的是自己上的锁，不出现误解锁
