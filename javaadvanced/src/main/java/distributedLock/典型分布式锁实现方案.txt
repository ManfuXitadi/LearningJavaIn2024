MySQL(一般不使用)
    基本原理：在数据库中创建一个专门的表。对于需要锁定的操作，相关的进程会在这个表中插入或更新一条记录
    优点：简单易懂，容易实现。利用已有的MySQL数据库，无需额外的系统或服务
    缺点：存在性能和可靠性问题，一般不使用

Redis
    基本原理：setNx原子操作获取锁，expiare命令设置过期时间，lua脚本实现锁释放原子性
    优点：简单易用，高性能
    缺点：可能存在可靠性问题，不是强一致，实现公平锁较复杂

ZooKeeper
    基本原理：临时顺序节点 + watch机制
    优点：可靠性高，强一致，支持公平锁，避免死锁
    缺点：性能开销较大，实现较复杂